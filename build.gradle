plugins {
    id 'fabric-loom' version '1.9.1'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven { url 'https://maven.fabricmc.net/' }
    maven { url 'https://maven.shedaniel.me/' }
    maven { url 'https://maven.terraformersmc.com/releases/' }
    maven {
        url "https://maven.nucleoid.xyz/"
        name "Nucleoid"
    }
    mavenCentral()
 
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    implementation "com.mojang:brigadier:${project.brigadier}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"


    modImplementation "eu.pb4:placeholder-api:2.5.2+1.21.3"
    modApi("me.shedaniel.cloth:cloth-config-fabric:17.0.144") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modApi "com.terraformersmc:modmenu:13.0.2"

}

loom {
    mods {
        "breakthemod" {
            sourceSet sourceSets.main
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

sourceSets {
    main {
        java {
        }
    }
}
